{"version":3,"sources":["Components/DataTables/hoursArray.js","constants/action-types.js","Containers/LoginPage/setAuthToken.js","actions/index.js","Components/AppointmentCards/AppointmentCards.js","Components/DatePicker/DatePicker.js","Containers/LeftPanel/LeftPanel.js","Components/AddAppointment/AddAppointment.js","Components/TableBackground/TableBackground.js","Components/HourRows/HourRows.js","Containers/MainPage/MainPage.js","Containers/LoginPage/LoginPage.js","App.js","serviceWorker.js","reducers/index.js","store/index.js","index.js"],"names":["hoursArray","SELECT_PROGRAMARE","HANDLE_FORM_CHANGE","SELECT_DATE","SELECT_EDIT_DATE","FETCH_PROGRAMARI_SUCCESS","FETCH_PROGRAMARI_STARTED","FETCH_EDIT_PROGRAMARI_SUCCESS","FETCH_EDIT_PROGRAMARI_STARTED","ADD_PROGRAMARE_SUCCESS","ADD_PROGRAMARE_STARTED","DELETE_PROGRAMARE_STARTED","DELETE_PROGRAMARE_SUCCESS","TOGGLE_ADD_MODAL","ADD_HOURS_ARRAY","USER_LOGGING_STARTED","USER_LOGGING_SUCCESS","USER_LOGGING_ERROR","LOGGING_OUT","SET_PROGRAMARI","SET_PROGRAMARI_EDIT","SET_ERROR","setAuthToken","token","axios","defaults","headers","common","socket","io","connect","loggingOut","payload","localStorage","removeItem","type","toggleAddModal","deleteProgramare","dispatch","emit","selectDate","fetchProgramari","collection","moment","format","state","programari","selectedDate","programare","toggleModal","setProgramari","setProgramariEdit","date","props","useEffect","on","input","data","newDate","Date","error","document","write","window","location","reload","array","map","hourIndex","indexOf","Number","ora","cabinetIndex","cabinet","durata","bgColor","medic","doctorName","style","iconStyle","cellStyle","bottom","display","gridTemplateColumns","gridGap","marginTop","alignContent","height","gridColumn","flexDirection","justifyContent","id","index","key","className","gridRow","zIndex","textOverflow","overflow","nume","prenume","telefon","onClick","event","Object","assign","edit","editDate","editCabinet","handleDelete","Fragment","localeUtils","MomentLocaleUtils","locale","selectedDays","onDayClick","handleDateSelect","disabledDays","daysOfWeek","logOut","emptyState","alignItems","backgroundColor","width","borderRadius","Button","position","padding","left","color","letterSpacing","Fab","aria-label","top","fontSize","selectedProgramare","modalState","adding","programariEdit","addProgramare","fetchEditProgramari","handleFormChange","formChange","useState","setSelectedDate","freeHoursArray","setFreeHoursArray","disabled","undefined","handleChange","target","value","open","toggle","size","placeholder","onChange","options","label","theseHours","busyHoursArray","availableHoursList","startTime","i","busyHours","add","concat","push","temp","Set","filter","x","has","hour","item","right","programareDelete","setTimeout","TableBackground","hours","hourRows","hourText","margin","verticalAlign","loading","errorContent","errorArray","eroare","toString","console","log","process","REACT_APP_SERVER","CssBaseline","active","spinner","gridColumnStart","gridRowStart","loginErrors","userLogging","userLog","post","then","res","setItem","decoded","jwt_decode","catch","err","response","email","setEmail","password","setPassword","noValidate","onSubmit","e","preventDefault","Input","classnames","invalid","emailnotfound","passwordincorrect","paddingLeft","loggedIn","setUser","user","jwtToken","currentTime","now","exp","Boolean","hostname","match","initialState","deleting","rootReducer","action","oldState","newState","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","getItem","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0d778a6.chunk.js","sourcesContent":["export const hoursArray = [\r\n  0,\r\n  800,\r\n  830,\r\n  900,\r\n  930,\r\n  1000,\r\n  1030,\r\n  1100,\r\n  1130,\r\n  1200,\r\n  1230,\r\n  1300,\r\n  1330,\r\n  1400,\r\n  1430,\r\n  1500,\r\n  1530,\r\n  1600,\r\n  1630,\r\n  1700,\r\n  1730,\r\n  1800,\r\n  1830,\r\n  1900,\r\n  1930\r\n];","export const ADD_PROGRAMARE = \"ADD_PROGRAMARE\";\r\nexport const SELECT_PROGRAMARE = \"SELECT_PROGRAMARE\";\r\nexport const HANDLE_FORM_CHANGE = \"HANDLE_FORM_CHANGE\";\r\nexport const SELECT_DATE = \"SELECT_DATE\";\r\nexport const SELECT_EDIT_DATE = \"SELECT_EDIT_DATE\";\r\nexport const FETCH_PROGRAMARI_SUCCESS = \"FETCH_PROGRAMARI_SUCCESS\";\r\nexport const FETCH_PROGRAMARI_STARTED = \"FETCH_PROGRAMARI_STARTED\";\r\nexport const FETCH_EDIT_PROGRAMARI_SUCCESS = \"FETCH_EDIT_PROGRAMARI_SUCCESS\";\r\nexport const FETCH_EDIT_PROGRAMARI_STARTED = \"FETCH_EDIT_PROGRAMARI_STARTED\";\r\nexport const ADD_PROGRAMARE_SUCCESS = \"ADD_PROGRAMARE_SUCCESS\";\r\nexport const ADD_PROGRAMARE_STARTED = \"ADD_PROGRAMARE_STARTED\";\r\nexport const DELETE_PROGRAMARE_STARTED = \"DELETE_PROGRAMARE_STARTED\";\r\nexport const DELETE_PROGRAMARE_SUCCESS = \"DELETE_PROGRAMARE_SUCCESS\";\r\nexport const TOGGLE_ADD_MODAL = \"TOGGLE_ADD_MODAL\";\r\nexport const ADD_HOURS_ARRAY = \"ADD_HOURS_ARRAY\";\r\nexport const USER_LOGGING_STARTED = \"USER_LOGGING_STARTED\";\r\nexport const USER_LOGGING_SUCCESS = \"USER_LOGGING_SUCCESS\";\r\nexport const USER_LOGGING_ERROR = \"USER_LOGGING_ERROR\";\r\nexport const LOGGING_OUT = \"LOGGING_OUT\";\r\nexport const SET_PROGRAMARI = \"SET_PROGRAMARI\";\r\nexport const SET_PROGRAMARI_EDIT = \"SET_PROGRAMARI_EDIT\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\n","import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport {\r\n  SELECT_PROGRAMARE,\r\n  HANDLE_FORM_CHANGE,\r\n  SELECT_DATE,\r\n  SELECT_EDIT_DATE,\r\n  FETCH_PROGRAMARI_STARTED,\r\n  FETCH_EDIT_PROGRAMARI_STARTED,\r\n  ADD_PROGRAMARE_STARTED,\r\n  DELETE_PROGRAMARE_STARTED,\r\n  TOGGLE_ADD_MODAL,\r\n  ADD_HOURS_ARRAY,\r\n  USER_LOGGING_STARTED,\r\n  USER_LOGGING_SUCCESS,\r\n  USER_LOGGING_ERROR,\r\n  LOGGING_OUT,\r\n  SET_PROGRAMARI,\r\n  SET_PROGRAMARI_EDIT,\r\n  SET_ERROR\r\n} from \"../constants/action-types\";\r\nimport moment from \"moment\";\r\nimport setAuthToken from \"../Containers/LoginPage/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport io from \"socket.io-client\";\r\n\r\nlet socket = io.connect(\"http://localhost:3001\");\r\n\r\nexport function userLogging(payload) {\r\n  return dispatch => {\r\n    dispatch({ type: USER_LOGGING_STARTED });\r\n    axios\r\n      .post(`http://localhost:3001/api/users/login`, payload)\r\n      .then(res => {\r\n        const { token } = res.data;\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        setAuthToken(token);\r\n        const decoded = jwt_decode(token);\r\n        dispatch({ type: USER_LOGGING_SUCCESS, payload: decoded });\r\n      })\r\n      .catch(err =>\r\n        dispatch({ type: USER_LOGGING_ERROR, payload: err.response.data })\r\n      );\r\n  };\r\n}\r\n\r\nexport function setError(payload) {\r\n  return { type: SET_ERROR, payload };\r\n}\r\n\r\nexport function setProgramari(payload) {\r\n  return { type: SET_PROGRAMARI, payload };\r\n}\r\n\r\nexport function setProgramariEdit(payload) {\r\n  return { type: SET_PROGRAMARI_EDIT, payload };\r\n}\r\n\r\nexport function setUser(payload) {\r\n  return { type: USER_LOGGING_SUCCESS, payload };\r\n}\r\n\r\nexport function loggingOut(payload) {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setAuthToken(false);\r\n  return { type: LOGGING_OUT, payload };\r\n}\r\n\r\nexport function toggleAddModal(payload) {\r\n  return { type: TOGGLE_ADD_MODAL, payload };\r\n}\r\n\r\nexport function selectEditDate(payload) {\r\n  return { type: SELECT_EDIT_DATE, payload };\r\n}\r\n\r\nexport function deleteProgramare(payload) {\r\n  return dispatch => {\r\n    dispatch({ type: DELETE_PROGRAMARE_STARTED });\r\n    socket.emit(\"deleteItems\", payload);\r\n  };\r\n}\r\n\r\nexport function addProgramare(payload) {\r\n  return dispatch => {\r\n    dispatch({ type: ADD_PROGRAMARE_STARTED });\r\n    socket.emit(\"addItems\", payload);\r\n  };\r\n}\r\n\r\nexport function selectProgramare(payload) {\r\n  return { type: SELECT_PROGRAMARE, payload };\r\n}\r\n\r\nexport function handleFormChange(payload) {\r\n  return { type: HANDLE_FORM_CHANGE, payload };\r\n}\r\n\r\nexport function selectDate(payload) {\r\n  return { type: SELECT_DATE, payload };\r\n}\r\n\r\nexport function addHoursArray(payload) {\r\n  return { type: ADD_HOURS_ARRAY, payload };\r\n}\r\n\r\nexport function fetchProgramari(payload) {\r\n  return dispatch => {\r\n    dispatch({ type: FETCH_PROGRAMARI_STARTED });\r\n    const collection = moment(payload).format(\"DDMMY\");\r\n    socket.emit(\"fetchItems\", collection);\r\n  };\r\n}\r\n\r\nexport function fetchEditProgramari(payload) {\r\n  return dispatch => {\r\n    dispatch({ type: FETCH_EDIT_PROGRAMARI_STARTED });\r\n    const collection = moment(payload).format(\"DDMMY\");\r\n    socket.emit(\"fetchEditItems\", collection);\r\n  };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hoursArray } from \"../../Components/DataTables/hoursArray\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport \"./AppointmentCards.css\";\r\nimport {\r\n  deleteProgramare,\r\n  toggleAddModal,\r\n  setProgramari,\r\n  setProgramariEdit,\r\n  fetchProgramari,\r\n  selectDate\r\n} from \"../../actions/index\";\r\nimport io from \"socket.io-client\";\r\nimport moment from \"moment\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    programari: state.programari,\r\n    selectedDate: state.selectedDate\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteProgramare: programare => dispatch(deleteProgramare(programare)),\r\n    toggleAddModal: toggleModal => dispatch(toggleAddModal(toggleModal)),\r\n    setProgramari: programari => dispatch(setProgramari(programari)),\r\n    setProgramariEdit: programari => dispatch(setProgramariEdit(programari)),\r\n    fetchProgramari: programari => dispatch(fetchProgramari(programari)),\r\n    selectDate: date => dispatch(selectDate(date))\r\n  };\r\n};\r\n\r\nconst AppointmentCards = props => {\r\n  useEffect(() => {\r\n    props.fetchProgramari(props.selectedDate);\r\n    const socket = io.connect(\"http://localhost:3001\");\r\n    socket.on(\"dataFetch\", input => {\r\n      props.setProgramari(input);\r\n    });\r\n    socket.on(\"refresh\", input => {\r\n      const data = moment(input, \"DDMMY\").format();\r\n      const newDate = new Date(data);\r\n      props.fetchProgramari(data);\r\n      props.selectDate(newDate);\r\n    });\r\n    socket.on(\"dataFetchEdit\", input => {\r\n      props.setProgramariEdit(input);\r\n    });\r\n    socket.on(\"error\", error => {\r\n      document.write(`Error: ${error} <br />`);\r\n    });\r\n    socket.on(\"connect_error\", error => {\r\n      document.write(`Eroare la conexiune. Reincercati. <br />`);\r\n    });\r\n    socket.on(\"connect_timeout\", error => {\r\n      document.write(`Conexiunea a expirat. <br />`);\r\n    });\r\n    socket.on(\"reconnect\", () => {\r\n      window.location.reload(true);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const { programari, selectedDate, deleteProgramare } = props;\r\n\r\n  const handleEdit = event => {\r\n    props.toggleAddModal(\r\n      Object.assign({}, event, {\r\n        edit: true,\r\n        editDate: event.selectedDate,\r\n        editCabinet: event.cabinet,\r\n        cabinet: \"\"\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDelete = event => {\r\n    const payload = Object.assign(\r\n      {},\r\n      { selectedDate: selectedDate },\r\n      { id: event }\r\n    );\r\n    deleteProgramare(payload);\r\n  };\r\n\r\n  const doctorName = data => {\r\n    switch (data) {\r\n      case \"red\": {\r\n        return \"dr. A\";\r\n      }\r\n      case \"green\": {\r\n        return \"dr. B\";\r\n      }\r\n      case \"blue\": {\r\n        return \"dr. C\";\r\n      }\r\n      default:\r\n        return \"no medic\";\r\n    }\r\n  };\r\n\r\n  const array = programari.map(programare => {\r\n    let hourIndex = hoursArray.indexOf(Number(programare.ora)) + 1;\r\n    let cabinetIndex = Number(programare.cabinet) + 1;\r\n    let durata = programare.durata;\r\n    let bgColor = `bg-${programare.medic}`;\r\n    const medic = doctorName(programare.medic);\r\n    let style = {};\r\n    let iconStyle = {};\r\n    let cellStyle = {};\r\n    if (durata === \"1\") {\r\n      iconStyle = { bottom: \"0.5rem\" };\r\n      style = {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr 1fr\",\r\n        gridGap: \"1px\",\r\n        marginTop: \"-3px\",\r\n        alignContent: \"center\",\r\n        height: \"100%\"\r\n      };\r\n    } else if (durata === \"2\") {\r\n      style = {\r\n        alignContent: \"center\",\r\n        marginTop: \"-3px\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"50% 50%\",\r\n        height: \"100%\"\r\n      };\r\n      cellStyle = { gridColumn: \"1 / span 2\" };\r\n    } else {\r\n      style = {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        marginTop: \"-3px\",\r\n        justifyContent: \"center\",\r\n        height: \"100%\"\r\n      };\r\n    }\r\n\r\n    return (\r\n      <div\r\n        id={`${programare.index}`}\r\n        key={`${programare.index}`}\r\n        className={`programare pt1 tc dib black-90 shadow-4 ${bgColor}`}\r\n        style={{\r\n          gridColumn: cabinetIndex,\r\n          gridRow: `${hourIndex} / span ${durata}`,\r\n          zIndex: \"9\"\r\n        }}\r\n      >\r\n        <div style={style}>\r\n          <span\r\n            style={{\r\n              textOverflow: \"hidden\",\r\n              height: \"1rem\",\r\n              overflow: \"hidden\"\r\n            }}\r\n          >\r\n            {programare.nume} {programare.prenume}\r\n          </span>\r\n          <span>{programare.telefon}</span>\r\n          <span style={cellStyle}>{medic}</span>\r\n        </div>\r\n        <div className=\"editIcon\" style={iconStyle}>\r\n          <EditIcon onClick={() => handleEdit(programare)} />\r\n        </div>\r\n        <div className=\"deleteIcon\" style={iconStyle}>\r\n          <DeleteIcon onClick={() => handleDelete(`${programare.index}`)} />\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <React.Fragment>{array}</React.Fragment>;\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AppointmentCards);\r\n","import React from \"react\";\r\nimport \"./DatePicker.css\";\r\nimport DayPicker from \"react-day-picker\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport MomentLocaleUtils from \"react-day-picker/moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectDate } from \"../../actions/index\";\r\nimport { fetchProgramari } from \"../../actions/index\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectDate: selectedDate => dispatch(selectDate(selectedDate)),\r\n    fetchProgramari: programare => dispatch(fetchProgramari(programare))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedDate: state.selectedDate\r\n  };\r\n};\r\n\r\nconst DatePicker = props => {\r\n  const handleDateSelect = event => {\r\n    props.selectDate(event);\r\n    props.fetchProgramari(event);\r\n  };\r\n\r\n  return (\r\n    <div className=\"datePickerWrapper\">\r\n      <DayPicker\r\n        localeUtils={MomentLocaleUtils}\r\n        locale=\"ro\"\r\n        selectedDays={props.selectedDate}\r\n        onDayClick={event => handleDateSelect(event)}\r\n        disabledDays={{ daysOfWeek: [0, 6] }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DatePicker);\r\n","import React from \"react\";\r\nimport DatePicker from \"../../Components/DatePicker/DatePicker.js\";\r\nimport \"tachyons\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleAddModal, loggingOut } from \"../../actions/index\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toggleAddModal: toggleModal => dispatch(toggleAddModal(toggleModal)),\r\n    loggingOut: logOut => dispatch(loggingOut(logOut))\r\n  };\r\n};\r\n\r\nconst LeftPanel = props => {\r\n  const emptyState = { nume: \"\", prenume: \"\", telefon: \"\" };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#357edd\",\r\n        height: \"100%\",\r\n        width: \"auto\",\r\n        zIndex: \"10\"\r\n      }}\r\n      className=\"shadow-5\"\r\n    >\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#fafafa\",\r\n          borderRadius: \"10%\",\r\n          zIndex: \"20\",\r\n          height: \"max-content\"\r\n        }}\r\n        className=\"ma4 pa3 shadow-3\"\r\n      >\r\n        <DatePicker />\r\n      </div>\r\n      <Button\r\n        style={{\r\n          position: \"absolute\",\r\n          padding: \"1.5rem\",\r\n          bottom: \"0\",\r\n          left: \"0\",\r\n          width: \"23rem\",\r\n          height: \"2rem\",\r\n          color: \"#fafafa\",\r\n          letterSpacing: \"2px\",\r\n          zIndex: \"20\"\r\n        }}\r\n        onClick={props.loggingOut}\r\n      >\r\n        Log out\r\n      </Button>\r\n      <Fab\r\n        aria-label=\"add\"\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"1rem\",\r\n          left: \"21rem\",\r\n          backgroundColor: \"#74adff\",\r\n          color: \"white\",\r\n          width: \"4rem\",\r\n          height: \"4rem\",\r\n          zIndex: \"20\"\r\n        }}\r\n        onClick={() => props.toggleAddModal(emptyState)}\r\n      >\r\n        <AddIcon style={{ fontSize: \"2.5rem\" }} />\r\n      </Fab>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(LeftPanel);\r\n","//importing React stuff and Custom Components\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addProgramare,\r\n  handleFormChange,\r\n  toggleAddModal,\r\n  deleteProgramare,\r\n  fetchProgramari,\r\n  fetchEditProgramari\r\n} from \"../../actions/index\";\r\nimport { hoursArray } from \"../DataTables/hoursArray\";\r\n\r\n//importing styles\r\nimport { Button, Modal, ModalBody, ModalHeader } from \"shards-react\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"shards-ui/dist/css/shards.min.css\";\r\nimport \"primereact/resources/themes/nova-light/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"./AddAppointment.css\";\r\n\r\n//importing  DayPicker and Moment\r\nimport DayPicker from \"react-day-picker\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport MomentLocaleUtils from \"react-day-picker/moment\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ro\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addProgramare: programare => dispatch(addProgramare(programare)),\r\n    fetchProgramari: programari => dispatch(fetchProgramari(programari)),\r\n    fetchEditProgramari: programari =>\r\n      dispatch(fetchEditProgramari(programari)),\r\n    handleFormChange: formChange => dispatch(handleFormChange(formChange)),\r\n    toggleAddModal: toggleModal => dispatch(toggleAddModal(toggleModal)),\r\n    deleteProgramare: programare => dispatch(deleteProgramare(programare))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    programari: state.programari,\r\n    selectedProgramare: state.selectedProgramare,\r\n    modalState: state.modalState,\r\n    selectedDate: state.selectedDate,\r\n    adding: state.adding,\r\n    programariEdit: state.programariEdit,\r\n    hoursArray: state.hoursArray\r\n  };\r\n};\r\n\r\nconst AddAppointment = props => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [freeHoursArray, setFreeHoursArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    props.fetchEditProgramari(props.selectedDate);\r\n    const newDate = new Date(props.selectedDate);\r\n    setSelectedDate(newDate);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.selectedDate]);\r\n\r\n  const {\r\n    nume,\r\n    prenume,\r\n    ora,\r\n    durata,\r\n    medic,\r\n    cabinet\r\n  } = props.selectedProgramare;\r\n\r\n  const disabled =\r\n    nume === undefined ||\r\n    nume === \"\" ||\r\n    prenume === undefined ||\r\n    prenume === \"\" ||\r\n    ora === undefined ||\r\n    ora === \"\" ||\r\n    durata === undefined ||\r\n    medic === undefined ||\r\n    cabinet === undefined ||\r\n    cabinet === \"\";\r\n\r\n  const handleDateSelect = event => {\r\n    setSelectedDate(event);\r\n    props.handleFormChange({ cabinet: \"\" });\r\n    props.fetchEditProgramari(event);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    let target = event.target.id;\r\n    let value = event.target.value;\r\n    let payload = { [target]: value };\r\n    props.handleFormChange({ ...payload });\r\n  };\r\n\r\n  const busyHours = value => {\r\n    props.handleFormChange({ ora: \"\" });\r\n    let theseHours = [];\r\n    let busyHoursArray = [0];\r\n    let availableHoursArray = [];\r\n    let availableHoursList = [];\r\n    props.programariEdit.map(programare => {\r\n      if (value === programare.cabinet) {\r\n        const startTime = moment(programare.ora, \"Hmm\").format(\"HH:mm\");\r\n        for (let i = 0; i < programare.durata; i++) {\r\n          const busyHours = moment(startTime, \"HH:mm\")\r\n            .add(i * 0.5, \"h\")\r\n            .format(\"Hmm\");\r\n          busyHoursArray = busyHoursArray.concat(Number(busyHours));\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n\r\n    if (selectedProgramare.edit) {\r\n      theseHours = [];\r\n      for (let i = 0; i < selectedProgramare.durata; i++) {\r\n        theseHours.push(\r\n          Number(\r\n            moment(selectedProgramare.ora, \"Hmm\")\r\n              .add(0.5 * i, \"h\")\r\n              .format(\"HHmm\")\r\n          )\r\n        );\r\n      }\r\n      const temp = new Set(theseHours);\r\n      theseHours = [...new Set([...busyHoursArray].filter(x => !temp.has(x)))];\r\n    }\r\n\r\n    const temp = new Set(busyHoursArray);\r\n    availableHoursArray = [\r\n      ...new Set([...hoursArray].filter(x => !temp.has(x)))\r\n    ];\r\n\r\n    availableHoursArray.map(hour => {\r\n      const item = {\r\n        label: moment(hour, \"Hmm\").format(\"HH:mm\"),\r\n        value: moment(hour, \"Hmm\").format(\"Hmm\")\r\n      };\r\n      availableHoursList.push(item);\r\n      return null;\r\n    });\r\n    setFreeHoursArray(availableHoursList);\r\n  };\r\n\r\n  const addProgramare = () => {\r\n    let programare = props.selectedProgramare;\r\n    let index = `${programare.cabinet}${moment(programare.ora, \"Hmm\").format(\r\n      \"HHmm\"\r\n    )}`;\r\n    programare = Object.assign({}, programare, {\r\n      index: index,\r\n      selectedDate: selectedDate\r\n    });\r\n    props.handleFormChange({ index: index });\r\n    props.addProgramare(programare);\r\n    props.toggleAddModal(programare);\r\n    setFreeHoursArray([]);\r\n  };\r\n\r\n  const programareDelete = () => {\r\n    const { editDate, index } = props.selectedProgramare;\r\n    const payload = Object.assign(\r\n      {},\r\n      { selectedDate: editDate },\r\n      { id: index }\r\n    );\r\n    props.deleteProgramare(payload);\r\n  };\r\n\r\n  const submitClick = () => {\r\n    if (props.selectedProgramare.edit) {\r\n      programareDelete();\r\n      setTimeout(() => addProgramare(), 100);\r\n      setTimeout(() => props.fetchEditProgramari(props.selectedDate), 100);\r\n    } else {\r\n      addProgramare();\r\n      setTimeout(() => props.fetchEditProgramari(props.selectedDate), 100);\r\n    }\r\n  };\r\n\r\n  const doctorList = [\r\n    { label: \"Dr. A\", value: \"red\" },\r\n    { label: \"Dr. B\", value: \"green\" },\r\n    { label: \"Dr. C\", value: \"blue\" }\r\n  ];\r\n  const cabinetList = [\r\n    { label: \"Cabinet 1\", value: \"1\" },\r\n    { label: \"Cabinet 2\", value: \"2\" },\r\n    { label: \"Cabinet 3\", value: \"3\" }\r\n  ];\r\n  const durataList = [\r\n    { label: \"30 min\", value: \"1\" },\r\n    { label: \"1 ora\", value: \"2\" },\r\n    { label: \"1 ora si 30 min\", value: \"3\" },\r\n    { label: \"2 ore\", value: \"4\" }\r\n  ];\r\n\r\n  const { modalState, toggleAddModal, selectedProgramare } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={modalState}\r\n        toggle={() => toggleAddModal(selectedProgramare)}\r\n        size=\"lg\"\r\n      >\r\n        <ModalHeader>Programare</ModalHeader>\r\n        <ModalBody style={{ padding: \"0\" }}>\r\n          <div className=\"addAppointmentForm pv5\">\r\n            <div>\r\n              <DayPicker\r\n                localeUtils={MomentLocaleUtils}\r\n                locale=\"ro\"\r\n                selectedDays={selectedDate}\r\n                onDayClick={event => handleDateSelect(event)}\r\n                disabledDays={{ daysOfWeek: [0, 6] }}\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-row\" style={{ width: \"min-content\" }}>\r\n              <div>\r\n                <div className=\"ma2 mb3\">\r\n                  <InputText\r\n                    id=\"nume\"\r\n                    placeholder=\"Nume\"\r\n                    value={selectedProgramare.nume}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"200px\" }}\r\n                  />\r\n                </div>\r\n                <div className=\"ma2 mb3\">\r\n                  <InputText\r\n                    id=\"prenume\"\r\n                    placeholder=\"Prenume\"\r\n                    value={selectedProgramare.prenume}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"200px\" }}\r\n                  />\r\n                </div>\r\n                <div className=\"ma2 mb3\">\r\n                  <InputText\r\n                    id=\"telefon\"\r\n                    placeholder=\"Telefon\"\r\n                    value={selectedProgramare.telefon}\r\n                    onChange={handleChange}\r\n                    style={{ width: \"200px\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <Dropdown\r\n                  id=\"medic\"\r\n                  value={selectedProgramare.medic}\r\n                  options={doctorList}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Alege medicul\"\r\n                  className=\"ma2\"\r\n                  style={{ width: \"200px\" }}\r\n                />\r\n                <Dropdown\r\n                  id=\"cabinet\"\r\n                  value={selectedProgramare.cabinet}\r\n                  options={cabinetList}\r\n                  onChange={event => {\r\n                    handleChange(event);\r\n                    busyHours(event.target.value);\r\n                  }}\r\n                  placeholder=\"Alege cabinetul\"\r\n                  className=\"ma2\"\r\n                  style={{ width: \"200px\" }}\r\n                />\r\n                <Dropdown\r\n                  id=\"ora\"\r\n                  value={selectedProgramare.ora}\r\n                  options={freeHoursArray}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Alege ora\"\r\n                  className=\"ma2\"\r\n                  style={{ width: \"200px\" }}\r\n                />\r\n                <Dropdown\r\n                  id=\"durata\"\r\n                  value={selectedProgramare.durata}\r\n                  options={durataList}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Alege durata\"\r\n                  className=\"ma2\"\r\n                  style={{ width: \"200px\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Button\r\n            style={{ position: \"absolute\", right: \"20px\", bottom: \"20px\" }}\r\n            disabled={disabled}\r\n            onClick={submitClick}\r\n          >\r\n            Save\r\n          </Button>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddAppointment);\r\n","import React from \"react\";\r\nimport { hoursArray } from \"../DataTables/hoursArray\";\r\nimport \"./TableBackground.css\";\r\n\r\nconst TableBackground = () => {\r\n  const array = hoursArray.map((hours, i) => {\r\n    return (\r\n      <React.Fragment key={`fragment${i}`}>\r\n        <div\r\n          className=\"trBackground\"\r\n          style={{\r\n            display: \"table\",\r\n            width: \"100%\"\r\n          }}\r\n        >\r\n          <div\r\n            className=\"tableBackground\"\r\n            style={{ width: \"10%\", height: \"2rem\" }}\r\n          >\r\n            {\" \"}\r\n          </div>\r\n          <div className=\"tableBackground\" style={{ width: \"30%\" }}>\r\n            {\" \"}\r\n          </div>\r\n          <div className=\"tableBackground\" style={{ width: \"30%\" }}>\r\n            {\" \"}\r\n          </div>\r\n          <div className=\"tableBackground\" style={{ width: \"30%\" }}>\r\n            {\" \"}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n\r\n  return <React.Fragment>{array}</React.Fragment>;\r\n};\r\nexport default TableBackground;\r\n","import React from \"react\";\r\nimport { hoursArray } from \"../DataTables/hoursArray\";\r\nimport \"./HourRows.css\";\r\nimport moment from \"moment\";\r\n\r\nconst hourRows = () => {\r\n  const array = hoursArray.map(hour => {\r\n    let hourText = \"\";\r\n    if (hour === 0) {\r\n      hourText = null;\r\n    } else {\r\n      hourText = moment(hour, \"Hmm\").format(\"HH:mm\");\r\n    }\r\n\r\n    return (\r\n      <React.Fragment key={hour}>\r\n        <div\r\n          style={{ backgroundColor: \"rgba(0,0,0,0)\" }}\r\n          className=\"hourWrapper overflow-hidden tc\"\r\n        >\r\n          <p\r\n            style={{\r\n              padding: \"0px\",\r\n              margin: \"0px\",\r\n              display: \"table-cell\",\r\n              verticalAlign: \"middle\"\r\n            }}\r\n          >\r\n            {hourText}\r\n          </p>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n\r\n  return <React.Fragment>{array}</React.Fragment>;\r\n};\r\n\r\nexport default hourRows;\r\n","import React from \"react\";\r\nimport \"./MainPage.css\";\r\nimport \"tachyons\";\r\nimport AppointmentCards from \"../../Components/AppointmentCards/AppointmentCards\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport LeftPanel from \"../LeftPanel/LeftPanel\";\r\nimport AddAppointment from \"../../Components/AddAppointment/AddAppointment\";\r\nimport TableBackground from \"../../Components/TableBackground/TableBackground\";\r\nimport HourRows from \"../../Components/HourRows/HourRows\";\r\nimport \"shards-ui/dist/css/shards.min.css\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { Fab } from \"@material-ui/core\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.loading,\r\n    error: state.error,\r\n    errorContent: state.errorContent\r\n  };\r\n};\r\n\r\nconst MainPage = props => {\r\n  if (props.error) {\r\n    const errorArray = props.errorContent.map(eroare => {\r\n      return <p>{eroare.toString()}</p>;\r\n    });\r\n\r\n    console.log(process.env.REACT_APP_SERVER);\r\n\r\n    return <div>{errorArray}</div>;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <LoadingOverlay active={props.loading} spinner>\r\n          <div className=\"appWrapper flex flex-wrap\">\r\n            <LeftPanel />\r\n            <Fab\r\n              className=\"\"\r\n              style={{\r\n                backgroundColor: \"#74adff\",\r\n                color: \"white\",\r\n                position: \"absolute\",\r\n                top: \"1rem\",\r\n                right: \"2rem\",\r\n                height: \"auto\",\r\n                width: \"auto\"\r\n              }}\r\n              onClick={() => props.fetchProgramari(props.selectedDate)}\r\n            >\r\n              <RefreshIcon className=\"ma2\" style={{ fontSize: \"2.5rem\" }} />\r\n            </Fab>\r\n            <div className=\"tableWrapper\">\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  zIndex: \"1\",\r\n                  marginTop: \"1.95rem\"\r\n                }}\r\n              >\r\n                <TableBackground />\r\n              </div>\r\n              <HourRows />\r\n              <div\r\n                className=\"f4 tc\"\r\n                style={{\r\n                  padding: \"1.1rem\",\r\n                  gridColumnStart: \"2\",\r\n                  gridRowStart: \"1\"\r\n                }}\r\n              >\r\n                Cabinetul 1\r\n              </div>\r\n              <div\r\n                className=\"f4 tc\"\r\n                style={{\r\n                  padding: \"1.1rem\",\r\n                  gridColumnStart: \"3\",\r\n                  gridRowStart: \"1\"\r\n                }}\r\n              >\r\n                Cabinetul 2\r\n              </div>\r\n              <div\r\n                className=\"f4 tc\"\r\n                style={{\r\n                  padding: \"1.1rem\",\r\n                  gridColumnStart: \"4\",\r\n                  gridRowStart: \"1\"\r\n                }}\r\n              >\r\n                Cabinetul 3\r\n              </div>\r\n              <AppointmentCards />\r\n            </div>\r\n            <AddAppointment />\r\n          </div>\r\n        </LoadingOverlay>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(MainPage);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./LoginPage.css\";\r\nimport { userLogging } from \"../../actions/index\";\r\nimport classnames from \"classnames\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    userLogging: userLog => dispatch(userLogging(userLog))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loginErrors: state.loginErrors\r\n  };\r\n};\r\n\r\nconst LoginPage = props => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const { userLogging, loginErrors } = props;\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email: email,\r\n      password: password\r\n    };\r\n    userLogging(userData);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <div className=\"loginPageBackground\">\r\n        <div className=\"loginForm pa4 shadow-3\">\r\n          <div>\r\n            <p className=\"tc f3\" style={{ letterSpacing: \"1.5px\" }}>\r\n              Login\r\n            </p>\r\n            <form noValidate onSubmit={onSubmit}>\r\n              <div>\r\n                <Input\r\n                  value={email}\r\n                  placeholder=\"Email\"\r\n                  error={loginErrors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"pa1\", {\r\n                    invalid: loginErrors.email || loginErrors.emailnotfound\r\n                  })}\r\n                  style={{ width: \"25vw\" }}\r\n                  onChange={e => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                />\r\n                <p className=\"red\">\r\n                  {loginErrors.email}\r\n                  {loginErrors.emailnotfound}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <Input\r\n                  onChange={e => setPassword(e.target.value)}\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  error={loginErrors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"pa1\", {\r\n                    invalid:\r\n                      loginErrors.password !== undefined ||\r\n                      loginErrors.passwordincorrect !== undefined\r\n                  })}\r\n                  style={{ width: \"25vw\" }}\r\n                />\r\n                <p className=\"red\">\r\n                  {loginErrors.password}\r\n                  {loginErrors.passwordincorrect}\r\n                </p>\r\n              </div>\r\n              <div className=\"tr\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <Button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"tc\"\r\n                >\r\n                  Login\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginPage);\r\n","import React from \"react\";\r\nimport MainPage from \"./Containers/MainPage/MainPage\";\r\nimport LoginPage from \"./Containers/LoginPage/LoginPage\";\r\nimport { connect } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./Containers/LoginPage/setAuthToken\";\r\nimport { loggingOut, setUser } from \"./actions/index\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedIn: state.loggedIn\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loggingOut: logOut => dispatch(loggingOut(logOut)),\r\n    setUser: user => dispatch(setUser(user))\r\n  };\r\n};\r\n\r\nconst App = props => {\r\n  // Check for token to keep user logged in\r\n  if (localStorage.jwtToken) {\r\n    const token = localStorage.jwtToken;\r\n    setAuthToken(token);\r\n    const decoded = jwt_decode(token);\r\n    props.setUser(decoded);\r\n    const currentTime = Date.now() / 1000; // to get in milliseconds\r\n    if (decoded.exp < currentTime) {\r\n      props.loggingOut(); // Redirect to login\r\n    }\r\n  }\r\n\r\n  if (props.loggedIn) {\r\n    return <MainPage />;\r\n  } else {\r\n    return <LoginPage />;\r\n  }\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  SELECT_PROGRAMARE,\r\n  HANDLE_FORM_CHANGE,\r\n  SELECT_DATE,\r\n  SELECT_EDIT_DATE,\r\n  FETCH_PROGRAMARI_SUCCESS,\r\n  FETCH_PROGRAMARI_STARTED,\r\n  FETCH_EDIT_PROGRAMARI_SUCCESS,\r\n  FETCH_EDIT_PROGRAMARI_STARTED,\r\n  ADD_PROGRAMARE_SUCCESS,\r\n  ADD_PROGRAMARE_STARTED,\r\n  DELETE_PROGRAMARE_STARTED,\r\n  DELETE_PROGRAMARE_SUCCESS,\r\n  TOGGLE_ADD_MODAL,\r\n  ADD_HOURS_ARRAY,\r\n  USER_LOGGING_STARTED,\r\n  USER_LOGGING_SUCCESS,\r\n  USER_LOGGING_ERROR,\r\n  LOGGING_OUT,\r\n  SET_PROGRAMARI,\r\n  SET_PROGRAMARI_EDIT,\r\n  SET_ERROR\r\n} from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n  modalState: false,\r\n  deleting: false,\r\n  adding: false,\r\n  loading: true,\r\n  selectedDate: new Date(),\r\n  formChange: {},\r\n  selectedProgramare: { nume: \"\", prenume: \"\", telefon: \"\" },\r\n  programari: [],\r\n  loggedIn: false,\r\n  loginErrors: {},\r\n  programariEdit: [],\r\n  error: false\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if (typeof state === \"undefined\") {\r\n    state = initialState;\r\n  }\r\n\r\n  switch (action.type) {\r\n    case LOGGING_OUT: {\r\n      return Object.assign({}, state, { loggedIn: false });\r\n    }\r\n\r\n    case SELECT_EDIT_DATE: {\r\n      return Object.assign({}, state, action.payload);\r\n    }\r\n\r\n    case TOGGLE_ADD_MODAL: {\r\n      if (action.payload !== undefined) {\r\n        return Object.assign(\r\n          {},\r\n          state,\r\n          { selectedProgramare: action.payload },\r\n          { modalState: !state.modalState }\r\n        );\r\n      } else {\r\n        return Object.assign({}, state, { modalState: !state.modalState });\r\n      }\r\n    }\r\n\r\n    case USER_LOGGING_STARTED: {\r\n      return Object.assign({}, state, action.payload);\r\n    }\r\n    case USER_LOGGING_SUCCESS: {\r\n      return Object.assign({}, state, { loggedIn: true });\r\n    }\r\n    case USER_LOGGING_ERROR: {\r\n      return Object.assign({}, state, { loginErrors: action.payload });\r\n    }\r\n    case DELETE_PROGRAMARE_STARTED: {\r\n      return Object.assign({}, state, { deleting: true });\r\n    }\r\n    case DELETE_PROGRAMARE_SUCCESS: {\r\n      return Object.assign({}, state, { deleting: false });\r\n    }\r\n    case ADD_PROGRAMARE_STARTED: {\r\n      return Object.assign({}, state, { adding: true });\r\n    }\r\n    case SELECT_PROGRAMARE: {\r\n      return Object.assign({}, state, {\r\n        selectedProgramare: action.payload\r\n      });\r\n    }\r\n    case HANDLE_FORM_CHANGE: {\r\n      const oldState = state.selectedProgramare;\r\n      const newState = Object.assign({}, oldState, action.payload);\r\n\r\n      return Object.assign({}, state, { selectedProgramare: newState });\r\n    }\r\n\r\n    case SELECT_DATE: {\r\n      return Object.assign({}, state, { selectedDate: action.payload });\r\n    }\r\n\r\n    case FETCH_PROGRAMARI_SUCCESS: {\r\n      return Object.assign(\r\n        {},\r\n        state,\r\n        { programari: action.payload },\r\n        { loading: false }\r\n      );\r\n    }\r\n\r\n    case FETCH_PROGRAMARI_STARTED: {\r\n      return Object.assign({}, state, { loading: true });\r\n    }\r\n\r\n    case FETCH_EDIT_PROGRAMARI_SUCCESS: {\r\n      return Object.assign({}, state, { programariEdit: action.payload });\r\n    }\r\n\r\n    case FETCH_EDIT_PROGRAMARI_STARTED: {\r\n      return Object.assign({}, state);\r\n    }\r\n\r\n    case ADD_HOURS_ARRAY: {\r\n      const newState = Object.assign({}, state, { hoursArray: \"\" });\r\n      return Object.assign({}, newState, { hoursArray: action.payload });\r\n    }\r\n\r\n    case ADD_PROGRAMARE_SUCCESS: {\r\n      return Object.assign({}, state, {\r\n        adding: false\r\n      });\r\n    }\r\n\r\n    case SET_ERROR: {\r\n      return Object.assign({}, state, {\r\n        error: true,\r\n        errorContent: action.payload\r\n      });\r\n    }\r\n\r\n    case SET_PROGRAMARI: {\r\n      return Object.assign(\r\n        {},\r\n        state,\r\n        { programari: action.payload },\r\n        { loading: false }\r\n      );\r\n    }\r\n\r\n    case SET_PROGRAMARI_EDIT: {\r\n      return Object.assign({}, state, { programariEdit: action.payload });\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default rootReducer;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"typeface-roboto\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/index.js\";\r\nimport setAuthToken from \"./Containers/LoginPage/setAuthToken\";\r\n\r\nsetAuthToken(localStorage.getItem(\"jwtToken\"));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}